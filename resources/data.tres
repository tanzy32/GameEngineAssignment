[gd_resource type="Resource" script_class="GameSaveFile" load_steps=25 format=3]

[ext_resource type="Script" path="res://scripts/level 2 script/level_2.gd" id="1_6nmxw"]
[ext_resource type="Texture2D" path="res://assets/level 2 assets/Nature Platformer Tileset [16x16][FREE] - RottingPixels/nature-paltformer-tileset-16x16.png" id="2_qttx6"]
[ext_resource type="PackedScene" path="res://scenes/levels/level 2/movingplat.tscn" id="3_weivw"]
[ext_resource type="Script" path="res://scripts/level 2 script/movingplat.gd" id="4_hbxl0"]
[ext_resource type="PackedScene" path="res://scenes/levels/level 2/flying_enemy.tscn" id="5_raef3"]
[ext_resource type="Script" path="res://scripts/level 2 script/flying_enemy.gd" id="6_umv43"]
[ext_resource type="PackedScene" path="res://scenes/levels/level 2/movingplatvertical.tscn" id="7_ma6fy"]
[ext_resource type="Script" path="res://scripts/level 2 script/movingplatvertical.gd" id="8_6urmu"]
[ext_resource type="PackedScene" path="res://scenes/levels/level 2/potion.tscn" id="9_r262g"]
[ext_resource type="Script" path="res://scripts/level 2 script/potion.gd" id="10_q81jo"]
[ext_resource type="PackedScene" path="res://scenes/levels/level_1/player.tscn" id="11_cdf0f"]
[ext_resource type="PackedScene" path="res://scenes/menus/pause_menu.tscn" id="12_moab4"]
[ext_resource type="Script" path="res://scripts/menus/PauseMenu.gd" id="13_uf58x"]
[ext_resource type="Script" path="res://resources/GameSaveFile_Resource.gd" id="14_0f77j"]

[sub_resource type="PackedScene" id="PackedScene_ok6rq"]

[sub_resource type="PhysicsMaterial" id="PhysicsMaterial_b7dkb"]

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_30rbh"]
texture = ExtResource("2_qttx6")
0:0/0 = 0
0:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:0/0/physics_layer_0/angular_velocity = 0.0
0:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:0/0 = 0
1:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:0/0/physics_layer_0/angular_velocity = 0.0
1:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:0/0 = 0
2:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:0/0/physics_layer_0/angular_velocity = 0.0
2:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:0/0 = 0
3:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:0/0/physics_layer_0/angular_velocity = 0.0
3:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:0/0 = 0
4:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:0/0/physics_layer_0/angular_velocity = 0.0
4:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:0/0 = 0
5:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:0/0/physics_layer_0/angular_velocity = 0.0
5:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:0/0 = 0
6:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:0/0/physics_layer_0/angular_velocity = 0.0
6:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:1/0 = 0
0:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:1/0/physics_layer_0/angular_velocity = 0.0
0:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:1/0 = 0
1:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:1/0/physics_layer_0/angular_velocity = 0.0
1:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:1/0 = 0
2:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:1/0/physics_layer_0/angular_velocity = 0.0
2:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:1/0 = 0
3:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:1/0/physics_layer_0/angular_velocity = 0.0
3:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:1/0 = 0
4:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:1/0/physics_layer_0/angular_velocity = 0.0
6:1/0 = 0
6:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:1/0/physics_layer_0/angular_velocity = 0.0
6:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:2/0 = 0
0:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:2/0/physics_layer_0/angular_velocity = 0.0
0:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:2/0 = 0
1:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:2/0/physics_layer_0/angular_velocity = 0.0
1:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:2/0 = 0
2:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:2/0/physics_layer_0/angular_velocity = 0.0
2:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:2/0 = 0
3:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:2/0/physics_layer_0/angular_velocity = 0.0
3:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:2/0 = 0
4:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:2/0/physics_layer_0/angular_velocity = 0.0
4:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:2/0 = 0
5:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:2/0/physics_layer_0/angular_velocity = 0.0
5:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:2/0 = 0
6:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:2/0/physics_layer_0/angular_velocity = 0.0
6:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:3/0 = 0
0:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:3/0/physics_layer_0/angular_velocity = 0.0
1:3/0 = 0
1:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:3/0/physics_layer_0/angular_velocity = 0.0
2:3/0 = 0
2:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:3/0/physics_layer_0/angular_velocity = 0.0
2:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-3.375, -8, 3.125, -8, 5.625, -5.5, 5.75, 8, -6, 8, -5.875, -4.75)
3:3/0 = 0
3:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:3/0/physics_layer_0/angular_velocity = 0.0
3:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:3/0 = 0
4:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:3/0/physics_layer_0/angular_velocity = 0.0
4:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:3/0 = 0
5:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:3/0/physics_layer_0/angular_velocity = 0.0
5:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:3/0 = 0
6:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:3/0/physics_layer_0/angular_velocity = 0.0
6:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:4/0 = 0
0:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:4/0/physics_layer_0/angular_velocity = 0.0
1:4/0 = 0
1:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:4/0/physics_layer_0/angular_velocity = 0.0
2:4/0 = 0
2:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:4/0/physics_layer_0/angular_velocity = 0.0
2:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-6.125, -8, 5.875, -8, 6.375, 8, -6, 8)
3:4/0 = 0
3:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:4/0/physics_layer_0/angular_velocity = 0.0
3:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:4/0 = 0
4:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:4/0/physics_layer_0/angular_velocity = 0.0
4:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:4/0 = 0
5:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:4/0/physics_layer_0/angular_velocity = 0.0
5:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:4/0 = 0
6:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:4/0/physics_layer_0/angular_velocity = 0.0
6:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:5/0 = 0
0:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:5/0/physics_layer_0/angular_velocity = 0.0
1:5/0 = 0
1:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:5/0/physics_layer_0/angular_velocity = 0.0
2:5/0 = 0
2:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:5/0/physics_layer_0/angular_velocity = 0.0
2:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-5.75, -8, 6.625, -8, 5.5, -5.125, 3.875, -2.875, 3.875, 8, -3.875, 8, -3.75, -2, -5.25, -4.375)
3:5/0 = 0
3:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:5/0/physics_layer_0/angular_velocity = 0.0
4:5/0 = 0
4:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:5/0/physics_layer_0/angular_velocity = 0.0
5:5/0 = 0
5:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:5/0/physics_layer_0/angular_velocity = 0.0
6:5/0 = 0
6:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:5/0/physics_layer_0/angular_velocity = 0.0
6:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:6/0 = 0
0:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:6/0/physics_layer_0/angular_velocity = 0.0
0:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:6/0 = 0
1:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:6/0/physics_layer_0/angular_velocity = 0.0
1:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:6/0 = 0
2:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:6/0/physics_layer_0/angular_velocity = 0.0
2:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:6/0 = 0
3:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:6/0/physics_layer_0/angular_velocity = 0.0
4:6/0 = 0
4:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:6/0/physics_layer_0/angular_velocity = 0.0
5:6/0 = 0
5:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:6/0/physics_layer_0/angular_velocity = 0.0
6:6/0 = 0
6:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:6/0/physics_layer_0/angular_velocity = 0.0
0:7/0 = 0
0:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:7/0/physics_layer_0/angular_velocity = 0.0
1:7/0 = 0
1:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:7/0/physics_layer_0/angular_velocity = 0.0
2:7/0 = 0
2:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:7/0/physics_layer_0/angular_velocity = 0.0
3:7/0 = 0
3:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:7/0/physics_layer_0/angular_velocity = 0.0
4:7/0 = 0
4:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:7/0/physics_layer_0/angular_velocity = 0.0
5:7/0 = 0
5:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:7/0/physics_layer_0/angular_velocity = 0.0
6:7/0 = 0
6:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:7/0/physics_layer_0/angular_velocity = 0.0
0:8/0 = 0
0:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:8/0/physics_layer_0/angular_velocity = 0.0
1:8/0 = 0
1:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:8/0/physics_layer_0/angular_velocity = 0.0
2:8/0 = 0
2:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:8/0/physics_layer_0/angular_velocity = 0.0
3:8/0 = 0
3:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:8/0/physics_layer_0/angular_velocity = 0.0
4:8/0 = 0
4:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:8/0/physics_layer_0/angular_velocity = 0.0
5:8/0 = 0
5:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:8/0/physics_layer_0/angular_velocity = 0.0
6:8/0 = 0
6:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:8/0/physics_layer_0/angular_velocity = 0.0
0:9/0 = 0
0:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:9/0/physics_layer_0/angular_velocity = 0.0
1:9/0 = 0
1:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:9/0/physics_layer_0/angular_velocity = 0.0
2:9/0 = 0
2:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:9/0/physics_layer_0/angular_velocity = 0.0
3:9/0 = 0
3:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:9/0/physics_layer_0/angular_velocity = 0.0
4:9/0 = 0
4:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:9/0/physics_layer_0/angular_velocity = 0.0
2:10/0 = 0
2:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:10/0/physics_layer_0/angular_velocity = 0.0
3:10/0 = 0
3:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:10/0/physics_layer_0/angular_velocity = 0.0
4:10/0 = 0
4:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:10/0/physics_layer_0/angular_velocity = 0.0

[sub_resource type="TileSet" id="TileSet_syyrq"]
physics_layer_0/collision_layer = 1
physics_layer_0/physics_material = SubResource("PhysicsMaterial_b7dkb")
sources/0 = SubResource("TileSetAtlasSource_30rbh")

[sub_resource type="Curve2D" id="Curve2D_pwusb"]
_data = {
"points": PackedVector2Array(0, 0, 0, 0, -27.7205, -354.55, 0, 0, 0, 0, -1048.75, -354.55)
}
point_count = 2

[sub_resource type="Curve2D" id="Curve2D_8d3c4"]
_data = {
"points": PackedVector2Array(0, 0, 0, 0, 0, 62, 0, 0, 0, 0, 1, -230)
}
point_count = 2

[sub_resource type="Curve2D" id="Curve2D_nyrge"]
_data = {
"points": PackedVector2Array(0, 0, 0, 0, 2379.31, -150.376, 0, 0, 0, 0, 1325.95, -150.376)
}
point_count = 2

[sub_resource type="Curve2D" id="Curve2D_q4of6"]
_data = {
"points": PackedVector2Array(0, 0, 0, 0, 2425.51, -139.357, 0, 0, 0, 0, 3187.82, -139.357)
}
point_count = 2

[sub_resource type="GDScript" id="GDScript_cplqo"]
script/source = "class_name Player
extends CharacterBody2D

# Enumeration for various character states
enum State{
	IDLE,
	RUNNING,
	JUMP,
	FALL,
	LANDING,
	WALL_SLIDING,
	WALL_JUMP,
	SLIDE,
	SLIDE_END,
}

# Define the states where the character is on the ground
const GROUND_STATES := [
	State.IDLE, State.RUNNING, State.LANDING,
]

# Define various constants for character movement
const RUN_SPEED := 160.0
const FLOOR_ACCELERATION := RUN_SPEED / 0.2
const AIR_ACCELERATION := RUN_SPEED / 0.1
const JUMP_VELOCITY := -500.0
const WALL_JUMP_VELOCITY := Vector2(500, -400)
const SLIDE_SPEED := 260.0

# Get the default gravity value from project settings
var default_gravity:= ProjectSettings.get(\"physics/2d/default_gravity\") as float
var is_first_tick := false
var jump_max = 1
var jump_count = 0

# Cache references to various nodes
@onready var animation_player = $AnimationPlayer
@onready var coyote_timer: Timer = $CoyoteTimer
@onready var jump_request_timer: Timer = $JumpRequestTimer
@onready var state_machine: StateMachine = $StateMachine
@onready var graphics: Node2D = $Graphics
@onready var foot_checker: RayCast2D = $Graphics/Sprite2D/FootChecker
@onready var hand_checker: RayCast2D = $Graphics/Sprite2D/HandChecker
@onready var slide_timer: Timer = $SlideTimer

# Handle unhandled input events
func _unhandled_input(event: InputEvent) -> void:
	if event.is_action_pressed(\"jump\"):
		jump_request_timer.start()
	
	if event.is_action_released(\"jump\"):
		jump_request_timer.stop()
		 # Reduce jump velocity for a shorter jump
		if velocity.y < JUMP_VELOCITY / 2: 
			velocity.y = JUMP_VELOCITY / 4
				
	if event.is_action_pressed(\"slide\"):
		slide_timer.start()


# Update physics for each state
func tick_physics(state: State, delta: float) -> void:		
	match state:
		State.IDLE:
			move(default_gravity,delta)
			
		State.RUNNING:
			move(default_gravity, delta)
			
		State.JUMP:
			move(0.0 if is_first_tick else default_gravity, delta)
			
		State.FALL:
			move(default_gravity, delta)
			
		State.LANDING:
			stand(default_gravity, delta)
			
		State.WALL_SLIDING:
			move(default_gravity / 8, delta)
			if velocity.y < 0:
				velocity.y = 0
			
		State.WALL_JUMP:
			if state_machine.state_time < 0.1:
				stand(0.0 if is_first_tick else default_gravity,delta)
				#Flip character based on wall normal
				#Make the player always face away from the wall
				graphics.scale.x = -get_wall_normal().x
			else:
				move(default_gravity, delta)
			
		State.SLIDE:
			move(default_gravity, delta)	
		
		State.SLIDE_END:
			stand(default_gravity, delta)	
			
	is_first_tick = false		
			
# Move character with specific gravity and delta time
func move(gravity: float, delta: float) -> void:
	var direction := Input.get_axis(\"left\", \"right\")
	var acceleration :=  FLOOR_ACCELERATION if is_on_floor() else AIR_ACCELERATION
	velocity.x = move_toward(velocity.x, direction * RUN_SPEED, acceleration * delta)
	velocity.y += gravity * delta

	 # Flip character direction based on movement
	if not is_zero_approx(direction):
		graphics.scale.x = -1 if direction > 0 else 1
	
	move_and_slide()
	
# Stand still and apply gravity
func stand(gravity: float, delta: float) -> void:
	var acceleration := FLOOR_ACCELERATION if is_on_floor() else AIR_ACCELERATION
	velocity.x = move_toward(velocity.x, 0.0, acceleration * delta)
	velocity.y += gravity * delta
	
	move_and_slide()

func slide(delta: float) -> void:
	velocity.x = graphics.scale.x * SLIDE_SPEED
	velocity.y += default_gravity * delta
	
	move_and_slide()

func should_slide() -> bool:
	if not Input.is_action_just_pressed(\"slide\") or is_on_wall():
		return false
	return Input.is_action_just_pressed(\"slide\") and not foot_checker.is_colliding()
	
func can_wall_slide() -> bool:
	return is_on_wall() and hand_checker.is_colliding() and foot_checker.is_colliding()
	
# Determine the next state based on the current state and conditio	
func get_next_state(state: State) -> State:
	var direction := Input.get_axis(\"left\", \"right\")
	var is_still := is_zero_approx(direction) and is_zero_approx(velocity.x)
	
	var can_jump := is_on_floor() or coyote_timer.time_left > 0 or jump_count < jump_max
	var should_jump := can_jump and jump_request_timer.time_left > 0

	if is_on_floor():
		jump_count = 0
		
	if should_jump:
		jump_count += 1 
		return State.JUMP
			
	match state:
		State.IDLE:
			if not is_on_floor():
				return State.FALL
			if not is_still:
				return State.RUNNING
			if should_slide():
				return State.SLIDE
				
		State.RUNNING:
			if not is_on_floor():
				return State.FALL
			if is_still:
				return State.IDLE
			if should_slide():
				return State.SLIDE
			
		State.JUMP:
			print(\"jump count remaining:\", jump_count)
			if velocity.y >= 0 or jump_count < jump_max:
				return State.FALL
			if is_on_wall():
				return State.WALL_SLIDING
			
		State.FALL:
			if is_on_floor():
				return State.LANDING if is_still else State.RUNNING
			if can_wall_slide():
				return State.WALL_SLIDING

		State.LANDING:
			if not is_still:
				return State.RUNNING
			if not animation_player.is_playing():
				return State.IDLE
		
		State.WALL_SLIDING:
			if jump_request_timer.time_left > 0:
				return State.WALL_JUMP
			if is_on_floor():
				return State.IDLE
			if not is_on_wall():
				return  State.FALL
				
		State.WALL_JUMP:
			if can_wall_slide() and not is_first_tick:
				return State.WALL_SLIDING
			if velocity.y >= 0:
				return State.FALL
			
		State.SLIDE:
			if not is_on_floor():
				return State.FALL
			if is_on_wall():
				return State.SLIDE_END
			if slide_timer.time_left > 0:
				print(\"Slide time remaining:\", slide_timer.time_left)
				return State.SLIDE
			else:
				print(\"Slide timer expired\")
				return State.SLIDE_END
				
		State.SLIDE_END:
			return State.IDLE
		
	return state

# Handle state transitions
func transition_state(from: State, to: State) -> void:
	print(\"[%s] %s => %s\" % [
		Engine.get_physics_frames(),
		State.keys()[from] if from != -1 else \"<START>\",
		State.keys()[to],
	])
	
	if from not in GROUND_STATES and to in GROUND_STATES:
		coyote_timer.stop()
	
	match to:
		State.IDLE:
			animation_player.play(\"idle\")
		
		State.RUNNING:
			animation_player.play(\"running\")
		
		State.JUMP:
			animation_player.play(\"jump\")
			velocity.y = JUMP_VELOCITY
			coyote_timer.stop()
			jump_request_timer.stop()
			
		
		State.FALL:
			animation_player.play(\"fall\")
			if from in GROUND_STATES:
				coyote_timer.start()
			
		State.LANDING:
			jump_count = 0
			animation_player.play(\"landing\")

		State.WALL_SLIDING:
			animation_player.play(\"wall_sliding\")
		
		State.WALL_JUMP:
			animation_player.play(\"jump\")
			velocity = WALL_JUMP_VELOCITY
			velocity.x *= get_wall_normal().x
			jump_request_timer.stop()
			
		State.SLIDE:
			animation_player.play(\"slide\")

		State.SLIDE_END:
			animation_player.play(\"slide_end\")
			slide_timer.stop()
	
	if to == State.WALL_JUMP:
		Engine.time_scale = 0.3
	if from == State.WALL_JUMP:
		Engine.time_scale = 1.0
	
	is_first_tick = true
			
"

[sub_resource type="PackedScene" id="PackedScene_1cfyf"]
_bundled = {
"conn_count": 2,
"conns": PackedInt32Array(19, 19, 62, 61, 2, 0, 0, 19, 19, 64, 63, 2, 0, 0),
"editable_instances": [],
"names": PackedStringArray("Level2", "script", "level_start_pos", "Node2D", "TileMap", "position", "tile_set", "format", "layer_0/name", "layer_0/tile_data", "layer_1/name", "layer_1/tile_data", "Path2D", "scale", "curve", "loop", "speed", "speed_scale", "Spawn", "FlyingBat", "collision_layer", "collision_mask", "CharacterBody2D", "FlyingBatArea", "StaticBody2D", "CollisionPolygon2D", "polygon", "FlyingBatArea2", "FlyingBat2", "FlyingBatArea3", "FlyingBat3", "FlyingBatArea4", "FlyingBat4", "Path2D4", "Path2D2", "Path2D3", "Potion", "Area2D", "FlyingBat5", "FlyingBat6", "FlyingBatArea5", "Button A", "offset_left", "offset_top", "offset_right", "offset_bottom", "text", "Label", "Button B", "Boss Room", "FlyingBat7", "FlyingBatArea6", "player", "velocity", "Camera2D", "zoom", "PauseMenu", "process_mode", "layout_mode", "anchors_preset", "Control", "_on_PotionArea_body_entered", "body_entered", "_on_PotionArea_body_exited", "body_exited"),
"node_count": 33,
"node_paths": [],
"nodes": PackedInt32Array(-1, -1, 3, 0, -1, 2, 1, 0, 1073741826, 1, 0, 0, 0, 4, 4, -1, 7, 5, 2, 6, 3, 7, 4, 8, 5, 9, 6, 10, 7, 11, 8, 0, 0, 0, 12, 12, 9, 7, 5, 10, 13, 11, 14, 12, 1, 13, 15, 14, 16, 15, 17, 16, 0, 0, 0, 3, 18, -1, 1, 5, 17, 0, 0, 0, 22, 19, 18, 4, 5, 19, 20, 20, 21, 20, 1, 21, 0, 0, 0, 24, 23, -1, 2, 20, 20, 21, 20, 0, 5, 0, 25, 25, -1, 1, 26, 22, 0, 0, 0, 24, 27, -1, 2, 20, 20, 21, 20, 0, 7, 0, 25, 25, -1, 2, 5, 23, 26, 24, 0, 0, 0, 22, 28, 18, 4, 5, 25, 20, 20, 21, 20, 1, 21, 0, 0, 0, 24, 29, -1, 2, 20, 20, 21, 20, 0, 10, 0, 25, 25, -1, 2, 5, 26, 26, 27, 0, 0, 0, 22, 30, 18, 4, 5, 28, 20, 20, 21, 20, 1, 21, 0, 0, 0, 24, 31, -1, 2, 20, 20, 21, 20, 0, 13, 0, 25, 25, -1, 2, 5, 29, 26, 30, 0, 0, 0, 22, 32, 18, 4, 5, 31, 20, 20, 21, 20, 1, 21, 0, 0, 0, 12, 33, 32, 6, 5, 33, 14, 34, 1, 35, 15, 14, 16, 15, 17, 16, 0, 0, 0, 12, 34, 9, 7, 5, 36, 13, 11, 14, 37, 1, 13, 15, 14, 16, 15, 17, 16, 0, 0, 0, 12, 35, 9, 7, 5, 38, 13, 11, 14, 39, 1, 13, 15, 14, 16, 15, 17, 16, 0, 0, 0, 37, 36, 40, 2, 5, 41, 1, 42, 0, 0, 0, 22, 38, 18, 4, 5, 43, 20, 20, 21, 20, 1, 21, 0, 0, 0, 22, 39, 18, 4, 5, 44, 20, 20, 21, 20, 1, 21, 0, 0, 0, 24, 40, -1, 2, 20, 20, 21, 20, 0, 22, 0, 25, 25, -1, 3, 5, 45, 13, 46, 26, 47, 0, 0, 0, 47, 41, -1, 5, 42, 48, 43, 49, 44, 50, 45, 51, 46, 52, 0, 0, 0, 47, 48, -1, 5, 42, 53, 43, 54, 44, 55, 45, 56, 46, 57, 0, 0, 0, 47, 49, -1, 5, 42, 58, 43, 59, 44, 60, 45, 61, 46, 62, 0, 0, 0, 22, 50, 18, 4, 5, 63, 20, 20, 21, 20, 1, 21, 0, 0, 0, 24, 51, -1, 2, 20, 20, 21, 20, 0, 28, 0, 25, 25, -1, 2, 5, 64, 26, 27, 0, 0, 0, 22, 52, 65, 4, 5, 66, 21, 4, 53, 67, 1, 68, 0, 30, 0, 54, 54, -1, 1, 55, 69, 0, 0, 0, 60, 56, 70, 8, 57, 71, 58, 71, 59, 72, 42, 73, 43, 74, 44, 75, 45, 76, 1, 77, 0),
"variants": [ExtResource("1_6nmxw"), NodePath("Spawn"), Vector2(-74, 32), SubResource("TileSet_syyrq"), 2, "Ground", PackedInt32Array(1048596, 0, 0, 1114132, 0, 1, 1048597, 65536, 0, 1048598, 65536, 0, 1048599, 65536, 0, 1048600, 65536, 0, 1048601, 65536, 0, 1048602, 65536, 0, 1048603, 65536, 0, 1114133, 65536, 1, 1114134, 65536, 1, 1114135, 65536, 1, 1114136, 65536, 1, 1114137, 65536, 1, 1114138, 65536, 1, 1114139, 65536, 1, 1179668, 65536, 2, 1179669, 65536, 2, 1179670, 65536, 2, 1179671, 65536, 2, 1179672, 65536, 2, 1179673, 65536, 2, 1179674, 65536, 2, 1179675, 65536, 2, 1048604, 65536, 0, 1114140, 65536, 1, 1179676, 65536, 2, 983062, 0, 8, 983058, 393216, 2, 917520, 393216, 2, 851982, 393216, 2, 655374, 393216, 2, 589840, 393216, 2, 524306, 393216, 2, 786439, 262144, 0, 786440, 262144, 0, 786441, 262144, 0, 786442, 262144, 0, 786443, 262144, 0, 786444, 327680, 0, 458772, 0, 0, 458773, 65536, 0, 458774, 65536, 0, 458775, 65536, 0, 458776, 65536, 0, 458777, 65536, 0, 458778, 65536, 0, 458779, 65536, 0, 524308, 0, 1, 655380, 0, 2, 589844, 0, 1, 655381, 65536, 2, 655382, 65536, 2, 655383, 65536, 2, 655384, 65536, 2, 655385, 65536, 2, 655386, 65536, 2, 655387, 65536, 2, 524309, 65536, 1, 589845, 65536, 1, 589846, 65536, 1, 589847, 65536, 1, 589848, 65536, 1, 589849, 65536, 1, 589850, 65536, 1, 524314, 65536, 1, 524315, 65536, 1, 524313, 65536, 1, 524312, 65536, 1, 524311, 65536, 1, 524310, 65536, 1, 589851, 65536, 1, 262164, 196608, 0, 262165, 262144, 0, 262166, 262144, 0, 262167, 262144, 0, 196628, 393216, 0, 131092, 393216, 0, 65556, 393216, 0, 20, 393216, 0, -65516, 393216, 0, -131052, 393216, 0, -196588, 393216, 0, -262124, 393216, 0, -65513, 393216, 0, -131049, 393216, 0, -196585, 393216, 0, -393196, 393216, 0, -327660, 393216, 0, 458780, 65536, 0, 458781, 65536, 0, 458782, 65536, 0, 458783, 65536, 0, 458784, 327680, 0, 262168, 262144, 0, 262169, 262144, 0, 262170, 262144, 0, 262171, 327680, 0, 23, 393216, 0, 65559, 393216, 0, 393248, 393216, 0, 327712, 393216, 0, 262176, 393216, 0, 196640, 393216, 0, 131104, 393216, 0, 65568, 393216, 2, 32, 393216, 0, -65504, 393216, 0, -131040, 393216, 0, 196637, 393216, 0, 131101, 393216, 0, 65565, 393216, 0, 29, 393216, 0, 262173, 327680, 0, 262172, 262144, 0, -262121, 196608, 0, -262116, 327680, 0, -262120, 262144, 0, -262119, 262144, 0, -262118, 262144, 0, -262117, 262144, 0, -458734, 262144, 0, -458737, 262144, 0, -458736, 262144, 0, -458735, 262144, 0, -458738, 196608, 0, -524273, 0, 8, -458721, 0, 0, -458713, 131072, 0, -458720, 65536, 0, -458714, 65536, 0, -393185, 0, 2, -393177, 131072, 2, -393184, 65536, 2, -393183, 65536, 2, -393179, 65536, 2, -393182, 65536, 2, -393181, 65536, 2, -393180, 65536, 2, -393178, 65536, 2, -458719, 65536, 0, -458718, 65536, 0, -458717, 65536, 0, -458716, 65536, 0, -458715, 65536, 0, -655318, 196608, 2, -655317, 196608, 2, -655316, 196608, 2, -655315, 196608, 2, -524241, 393216, 0, -524240, 393216, 0, -524239, 393216, 0, -524238, 393216, 0, -524237, 393216, 0, -524236, 393216, 0, -524235, 393216, 0, -327638, 196608, 0, -327637, 262144, 0, -327636, 262144, 0, -327635, 327680, 0, -196561, 196608, 0, -196560, 262144, 0, -196559, 262144, 0, -196558, 262144, 0, -196557, 262144, 0, -196556, 262144, 0, -196555, 327680, 0, 65589, 131072, 0, 65588, 65536, 0, 65587, 65536, 0, 65586, 65536, 0, 65585, 0, 0, -524232, 196608, 0, -524221, 327680, 0, -524231, 262144, 0, -524230, 262144, 0, -524229, 262144, 0, -524228, 262144, 0, -524227, 262144, 0, -524226, 262144, 0, -524225, 262144, 0, -524224, 262144, 0, -524223, 262144, 0, -524222, 262144, 0, -524220, 262144, 0, -524219, 262144, 0, -524218, 262144, 0, 393284, 0, 6, 393285, 0, 6, 393286, 0, 6, 393287, 0, 6, 393288, 0, 6, 393289, 0, 6, 393290, 0, 6, 393291, 0, 6, 393292, 0, 6, 393293, 0, 6, 393294, 0, 6, 393295, 0, 6, 393296, 0, 6, 393297, 0, 6, 393298, 0, 6, 393299, 0, 6, 393300, 0, 6, 393301, 0, 6, 393302, 0, 6, 393303, 0, 6, 393304, 0, 6, 393305, 0, 6, 393306, 0, 6, 393307, 0, 6, 393308, 0, 6, 393309, 0, 6, 393310, 0, 6, 393311, 0, 6, 524353, 0, 6, 524352, 0, 6, 524351, 0, 6, 524350, 0, 6, 524349, 0, 6, 524348, 0, 6, 655427, 393216, 5, 655428, 393216, 5, 655429, 393216, 5, 655430, 393216, 5, 655431, 393216, 5, 786505, 196608, 1, 852043, 393216, 5, 852044, 393216, 5, 852045, 393216, 5, 786511, 196608, 1, 852049, 0, 6, 852050, 0, 6, 852051, 0, 6, 852052, 0, 6, 852053, 0, 6, 852054, 0, 6, 852055, 0, 6, 852056, 0, 6, 852057, 0, 6, 852058, 0, 6, 852059, 0, 6, 852060, 0, 6, 852061, 0, 6, 131148, 0, 6, 131149, 0, 6, 131150, 0, 6, 131151, 0, 6, 131152, 0, 6, 131153, 0, 6, 131154, 0, 6, 131155, 0, 6, 131156, 0, 6, 131157, 0, 6, 131158, 0, 6, 131159, 0, 6, 131160, 0, 6, 131161, 0, 6, 131162, 0, 6, 131163, 0, 6, 131164, 0, 6, 131165, 0, 6, 131166, 0, 6, 327761, 65536, 5, 262225, 65536, 4, 196689, 65536, 3, -786385, 196608, 2, -786384, 196608, 2, -786383, 196608, 2, -786382, 196608, 2, -786381, 196608, 2, -786380, 393216, 0, -786379, 393216, 0, 1048614, 131072, 0, 1114150, 131072, 1, 1179686, 131072, 2, 1048605, 65536, 0, 1048606, 65536, 0, 1048607, 65536, 0, 1048608, 65536, 0, 1048609, 65536, 0, 1048610, 65536, 0, 1048611, 65536, 0, 1048612, 65536, 0, 1048613, 65536, 0, 1114141, 65536, 1, 1114142, 65536, 1, 1114143, 65536, 1, 1114144, 65536, 1, 1114145, 65536, 1, 1114146, 65536, 1, 1114147, 65536, 1, 1114148, 65536, 1, 1114149, 65536, 1, 1179677, 65536, 2, 1179678, 65536, 2, 1179679, 65536, 2, 1179680, 65536, 2, 1179681, 65536, 2, 1179682, 65536, 2, 1179683, 65536, 2, 1179684, 65536, 2, 1179685, 65536, 2, 2424844, 65536, 0, 2490380, 65536, 1, 2555916, 65536, 1, 2621452, 65536, 2, 2424845, 65536, 0, 2490381, 65536, 1, 2555917, 65536, 1, 2621453, 65536, 2, 2424846, 65536, 0, 2490382, 65536, 1, 2555918, 65536, 1, 2621454, 65536, 2, 1572879, 196608, 0, 2031631, 65536, 0, 2424847, 65536, 0, 2490383, 65536, 1, 2555919, 65536, 1, 2621455, 65536, 2, 2031632, 131072, 0, 2424848, 65536, 0, 2490384, 65536, 1, 2555920, 65536, 1, 2621456, 65536, 2, 2424849, 65536, 0, 2490385, 65536, 1, 2555921, 65536, 1, 2621457, 65536, 2, 1572882, 196608, 0, 2424850, 131072, 0, 2490386, 131072, 1, 2555922, 131072, 1, 2621458, 131072, 2, 1572883, 196608, 0, 2621459, 327680, 5, 1572884, 196608, 0, 2621460, 327680, 5, 2621461, 327680, 5, 2097174, 196608, 1, 2621462, 327680, 5, 2097175, 196608, 1, 2621463, 327680, 5, 2097176, 196608, 1, 2621464, 327680, 5, 2359321, 327680, 0, 2621465, 327680, 5, 2621466, 327680, 5, 2621467, 327680, 5, 2621468, 327680, 5, 2621469, 327680, 5, 2621470, 327680, 5, 2621471, 327680, 5, 2228256, 196608, 1, 2621472, 327680, 5, 2228257, 196608, 1, 2621473, 327680, 5, 2228258, 196608, 1, 2621474, 327680, 5, 2621475, 327680, 5, 2621476, 327680, 5, 2621477, 327680, 5, 2621478, 327680, 5, 2621479, 327680, 5, 2621480, 327680, 5, 2621481, 327680, 5, 2424841, 65536, 0, 2490377, 65536, 1, 2555913, 65536, 1, 2621449, 65536, 2, 2424842, 65536, 0, 2490378, 65536, 1, 2555914, 65536, 1, 2621450, 65536, 2, 1441803, 393216, 3, 1507339, 393216, 3, 1572875, 393216, 3, 1638411, 393216, 3, 1703947, 393216, 3, 1769483, 393216, 3, 1835019, 393216, 3, 1900555, 393216, 3, 1966091, 327680, 4, 2424843, 65536, 0, 2490379, 65536, 1, 2555915, 65536, 1, 2621451, 65536, 2, 2031629, 65536, 0, 1572878, 196608, 0, 1638414, 393216, 3, 1703950, 393216, 3, 1769486, 393216, 3, 1835022, 393216, 3, 2031630, 65536, 0, 1572880, 196608, 0, 1572881, 196608, 0, 2097170, 196608, 1, 2097171, 196608, 1, 2097172, 196608, 1, 2097173, 196608, 1, 2359317, 196608, 0, 2359318, 262144, 0, 2359319, 262144, 0, 2359320, 262144, 0, 2228252, 196608, 1, 2228253, 196608, 1, 2228254, 196608, 1, 2228255, 196608, 1, 2424836, 65536, 1, 2621444, 65536, 2, 2490372, 65536, 1, 2555908, 65536, 1, 2424837, 65536, 0, 2424838, 65536, 0, 2424839, 65536, 0, 2424840, 65536, 0, 2490373, 65536, 1, 2490374, 65536, 1, 2490375, 65536, 1, 2490376, 65536, 1, 2555912, 65536, 1, 2555911, 65536, 1, 2555910, 65536, 1, 2555909, 65536, 1, 2621445, 65536, 2, 2621446, 65536, 2, 2621447, 65536, 2, 2621448, 65536, 2, 2621484, 393216, 5, 2555948, 393216, 5, 2490412, 393216, 5, 2424876, 393216, 5, 2359340, 393216, 5, 2293804, 393216, 5, 2228268, 393216, 5, 2162732, 393216, 5, 2097196, 393216, 5, 2031660, 393216, 5, 1966124, 393216, 5, 1900588, 393216, 5, 1835052, 393216, 5, 1769516, 393216, 5, 1703980, 393216, 5, 1638444, 393216, 5, 1572908, 393216, 5, 1507372, 393216, 5, 1441836, 393216, 5, 1376300, 393216, 5, 1310764, 393216, 5, 1245228, 393216, 5, 1179692, 393216, 5, 1114156, 393216, 5, 1048620, 393216, 5, 983084, 393216, 5, 917548, 393216, 5, 852012, 393216, 5, 786476, 393216, 5, 720940, 393216, 5, 655404, 393216, 5, 2621482, 327680, 5, 2621483, 327680, 5, 589868, 393216, 5, 524332, 393216, 5, 458796, 393216, 5, 458785, 393216, 5, 458786, 393216, 5, 458787, 393216, 5, 458788, 393216, 5, 458789, 393216, 5, 458790, 393216, 5, 458791, 393216, 5, 458792, 393216, 5, 458793, 393216, 5, 458794, 393216, 5, 458795, 393216, 5, 327724, 393216, 5, 393260, 393216, 5, 393249, 327680, 5, 393250, 327680, 5, 393251, 327680, 5, 393252, 327680, 5, 393253, 327680, 5, 393254, 327680, 5, 393255, 327680, 5, 393256, 327680, 5, 393257, 327680, 5, 393258, 327680, 5, 393259, 327680, 5, 2686980, 393216, 5, 2686981, 393216, 5, 2686982, 393216, 5, 2686983, 393216, 5, 2686984, 393216, 5, 2686985, 393216, 5, 2686986, 393216, 5, 2686987, 393216, 5, 2686988, 393216, 5, 2686989, 393216, 5, 2686990, 393216, 5, 2686991, 393216, 5, 2686992, 393216, 5, 2686993, 393216, 5, 2686994, 393216, 5, 2686995, 393216, 5, 2686996, 393216, 5, 2686997, 393216, 5, 2686998, 393216, 5, 2686999, 393216, 5, 2687000, 393216, 5, 2687001, 393216, 5, 2687002, 393216, 5, 2687003, 393216, 5, 2687004, 393216, 5, 2687005, 393216, 5, 2687006, 393216, 5, 2687007, 393216, 5, 2687008, 393216, 5, 2687009, 393216, 5, 2687010, 393216, 5, 2687011, 393216, 5, 2687012, 393216, 5, 2687013, 393216, 5, 2687014, 393216, 5, 2687015, 393216, 5, 2687016, 393216, 5, 2687017, 393216, 5, 2687018, 393216, 5, 2687019, 393216, 5, 2687020, 393216, 5, 2359300, 65536, 1, 2293764, 65536, 1, 2228228, 65536, 1, 2162692, 65536, 1, 2031620, 65536, 0, 2031621, 65536, 0, 2031622, 65536, 0, 2031623, 65536, 0, 2031624, 65536, 0, 2031625, 65536, 0, 2031626, 65536, 0, 2097156, 65536, 1, 2097157, 65536, 1, 2097158, 65536, 1, 2097159, 65536, 1, 2097160, 65536, 1, 2097161, 65536, 1, 2097162, 65536, 1, 2162698, 131072, 2, 2162697, 65536, 2, 2162696, 65536, 2, 2162695, 65536, 1, 2228231, 131072, 2, 2228230, 65536, 2, 2228229, 65536, 1, 2293765, 131072, 1, 2359301, 131072, 1, 2162694, 65536, 1, 2162693, 65536, 1, 2097168, 131072, 2, 2097167, 65536, 2, 2097166, 65536, 2, 2097165, 65536, 2, 2097164, 65536, 2, 2097163, 65536, 2, 2031627, 65536, 0, 2031628, 65536, 0, 1441796, 262144, 2, 1441797, 262144, 2, 1441798, 262144, 2, 1441799, 262144, 3, 1441800, 262144, 3, 1441801, 262144, 3, 1441802, 262144, 3, 1966084, 262144, 4, 1966085, 262144, 4, 1966086, 262144, 4, 1966087, 262144, 4, 1966088, 262144, 4, 1966089, 262144, 4, 1966090, 262144, 4, 1900548, 262144, 3, 1835012, 262144, 3, 1769476, 262144, 3, 1703940, 262144, 3, 1638404, 262144, 3, 1572868, 262144, 3, 1507332, 262144, 3, 1507333, 262144, 3, 1507334, 262144, 3, 1507338, 262144, 3, 1507337, 262144, 3, 1507336, 262144, 3, 1507335, 262144, 3, 1572869, 262144, 3, 1638405, 262144, 3, 1703941, 262144, 3, 1769477, 262144, 3, 1835013, 262144, 3, 1900549, 262144, 3, 1900550, 262144, 3, 1900551, 262144, 3, 1900552, 262144, 3, 1900553, 262144, 3, 1900554, 262144, 3, 1835018, 262144, 3, 1769482, 262144, 3, 1703946, 262144, 3, 1638410, 262144, 3, 1572874, 262144, 3, 1572873, 262144, 3, 1572872, 262144, 3, 1572871, 262144, 3, 1572870, 262144, 3, 1638406, 262144, 3, 1703942, 262144, 3, 1769478, 262144, 3, 1835014, 262144, 3, 1835015, 262144, 3, 1835016, 262144, 3, 1835017, 262144, 3, 1769481, 262144, 3, 1703945, 262144, 3, 1638409, 262144, 3, 1638408, 262144, 3, 1638407, 262144, 3, 1703943, 262144, 3, 1769479, 262144, 3, 1769480, 262144, 3, 1703944, 262144, 3, 1376267, 131072, 5, 1310731, 131072, 4, 655367, 131072, 4, 720903, 131072, 5, 589831, 131072, 4, 524295, 131072, 4, 458759, 131072, 3, 1245195, 131072, 4, 1179659, 131072, 4, 1114123, 131072, 3, 262188, 393216, 5, 196652, 393216, 5, 131116, 393216, 5, -589810, 131072, 4, -524274, 131072, 5, -655346, 131072, 4, -720882, 131072, 4, -786418, 131072, 3, 2359309, 393216, 6, 2359304, 393216, 6, 2359311, 327680, 6, 2031635, 327680, 6, 2162718, 393216, 6, 2162719, 393216, 6, 1507345, 327680, 6, -65479, 196608, 0, -65478, 262144, 0, -65477, 262144, 0, -65476, 262144, 0, -65475, 327680, 0, 196665, 393216, 0, 196666, 393216, 0, 196667, 393216, 0, 196668, 393216, 0, 196669, 393216, 0, 196670, 393216, 0, 196671, 393216, 0, 196672, 393216, 0, 196673, 393216, 0, 196674, 393216, 0, 458797, 0, 0, 458798, 65536, 0, 458799, 65536, 0, 458800, 65536, 0, 458801, 65536, 0, 458802, 65536, 0, 458803, 65536, 0, 458804, 65536, 0, 458805, 65536, 0, 458806, 131072, 0, 524333, 0, 1, 524334, 65536, 1, 524342, 131072, 1, 589878, 131072, 1, 655414, 131072, 2, 655405, 0, 2, 589869, 0, 1, 655406, 65536, 2, 655407, 65536, 2, 655408, 65536, 2, 655409, 65536, 2, 655410, 65536, 2, 655411, 65536, 2, 655412, 65536, 2, 655413, 65536, 2, 589870, 65536, 1, 589871, 65536, 1, 524335, 65536, 1, 524336, 65536, 1, 589872, 65536, 1, 589873, 65536, 1, 589874, 65536, 1, 589875, 65536, 1, 589876, 65536, 1, 589877, 65536, 1, 524341, 65536, 1, 524340, 65536, 1, 524339, 65536, 1, 524338, 65536, 1, 524337, 65536, 1, 2031616, 65536, 0, 2031617, 65536, 0, 2031618, 65536, 0, 2031619, 65536, 0, 2686976, 393216, 4, 2686977, 393216, 4, 2686978, 393216, 4, 2686979, 393216, 4, 2621440, 65536, 2, 2621441, 65536, 2, 2621442, 65536, 2, 2621443, 65536, 2, 2097152, 65536, 1, 2097153, 65536, 1, 2097154, 65536, 1, 2097155, 65536, 1, 2162691, 65536, 1, 2162690, 65536, 1, 2162689, 65536, 1, 2162688, 65536, 1, 2228224, 65536, 1, 2228225, 65536, 1, 2228226, 65536, 1, 2228227, 65536, 1, 2293763, 65536, 1, 2359299, 65536, 1, 2359298, 65536, 1, 2293761, 65536, 1, 2293762, 65536, 1, 2293760, 65536, 1, 2359296, 65536, 1, 2359297, 65536, 1, 2424833, 65536, 1, 2424832, 65536, 1, 2490368, 65536, 1, 2490369, 65536, 1, 2555904, 65536, 1, 2555905, 65536, 1, 2555906, 65536, 1, 2490370, 65536, 1, 2424834, 65536, 1, 2424835, 65536, 1, 2490371, 65536, 1, 2555907, 65536, 1, 1441792, 262144, 2, 1441793, 262144, 2, 1441794, 262144, 2, 1441795, 262144, 2, 1507328, 262144, 3, 1507329, 262144, 3, 1507330, 262144, 3, 1507331, 262144, 3, 1572867, 262144, 3, 1572866, 262144, 3, 1572865, 262144, 3, 1572864, 262144, 3, 1638400, 262144, 3, 1638401, 262144, 3, 1638402, 262144, 3, 1703938, 262144, 3, 1703939, 262144, 3, 1638403, 262144, 3, 1703937, 262144, 3, 1703936, 262144, 3, 1769472, 262144, 3, 1769473, 262144, 3, 1769474, 262144, 3, 1769475, 262144, 3, 1835011, 262144, 3, 1835010, 262144, 3, 1835009, 262144, 3, 1835008, 262144, 3, 1900544, 262144, 3, 1900545, 262144, 3, 1900546, 262144, 3, 1900547, 262144, 3, 1966080, 262144, 4, 1966081, 262144, 4, 1966082, 262144, 4, 1966083, 262144, 4, 1507325, 196608, 2, 1572861, 196608, 3, 1638397, 196608, 3, 1703933, 196608, 3, 1769469, 196608, 3, 1835005, 196608, 3, 1900541, 196608, 3, 1966077, 196608, 3, 2031613, 196608, 4, 2097149, 0, 0, 2162685, 0, 1, 2228221, 0, 1, 2293757, 0, 1, 2359293, 0, 1, 2424829, 0, 1, 2490365, 0, 1, 2555901, 0, 1, 2621437, 0, 1, 2686973, 0, 1, 2752509, 393216, 5, 1507326, 262144, 2, 1507327, 262144, 2, 2031614, 262144, 4, 2031615, 262144, 4, 1572862, 262144, 3, 1572863, 262144, 3, 1638398, 262144, 3, 1638399, 262144, 3, 1703935, 262144, 3, 1703934, 262144, 3, 1769470, 262144, 3, 1835006, 262144, 3, 1769471, 262144, 3, 1835007, 262144, 3, 1900543, 262144, 3, 1900542, 262144, 3, 1966078, 262144, 3, 1966079, 262144, 3, 2097150, 65536, 0, 2097151, 65536, 0, 2752510, 393216, 5, 2752511, 393216, 5, 2686974, 65536, 2, 2686975, 65536, 2, 2162686, 65536, 1, 2162687, 65536, 1, 2228223, 65536, 1, 2228222, 65536, 1, 2293758, 65536, 1, 2293759, 65536, 1, 2359295, 65536, 1, 2424831, 65536, 1, 2424830, 65536, 1, 2359294, 65536, 1, 2490366, 65536, 1, 2490367, 65536, 1, 2555903, 65536, 1, 2555902, 65536, 1, 2621438, 65536, 1, 2621439, 65536, 1, -655271, 0, 6, -655270, 0, 6, -655269, 0, 6, -720804, 65536, 7, -655268, 0, 6, -655267, 0, 6, -655266, 0, 6, -655265, 0, 6, -655264, 0, 6, -655263, 0, 6, -655262, 0, 6, -655261, 0, 6, -65460, 393216, 4, 76, 393216, 4, 65612, 393216, 4, -65442, 393216, 4, 94, 393216, 4, 65630, 393216, 4, 65613, 327680, 5, 65614, 327680, 5, 65615, 327680, 5, 65616, 327680, 5, 65617, 327680, 5, 65618, 327680, 5, 65619, 327680, 5, 65620, 327680, 5, 65621, 327680, 5, 65622, 327680, 5, 65623, 327680, 5, 65624, 327680, 5, 65625, 327680, 5, 65626, 327680, 5, 65627, 327680, 5, 65628, 327680, 5, 65629, 327680, 5, -130996, 131072, 5, -130978, 131072, 5, -196532, 131072, 4, -196514, 131072, 4, -262068, 131072, 3, -262050, 131072, 3, 393265, 0, 8, 786523, 196608, 6, 393262, 262144, 0, 327725, 262144, 0, 131120, 196608, 1, 131125, 131072, 2, 131121, 65536, 2, 131122, 65536, 2, 131123, 65536, 2, 131124, 65536, 2, 1114157, 393216, 4, 1114158, 393216, 4, 1114159, 393216, 4, 1114160, 393216, 4, 1114161, 393216, 4, 1114162, 393216, 4, 1114163, 393216, 4, 1114164, 393216, 4, 1114165, 393216, 4, 1114166, 393216, 4, 1114167, 393216, 4, 1114168, 393216, 4, 1114169, 393216, 4, 1114170, 393216, 4, 1114171, 393216, 4, 1114172, 393216, 4, 1114173, 393216, 4, 1114174, 393216, 4, 1114175, 393216, 4, 1114176, 393216, 4, 1114177, 393216, 4, 1114178, 393216, 4, 1114179, 393216, 4, 1114180, 393216, 4, 1114181, 393216, 4, 1114182, 393216, 4, 1114183, 393216, 4, 1114184, 393216, 4, 1114185, 393216, 4, 1114186, 393216, 4, 1114187, 393216, 4, 1114188, 393216, 4, 1114189, 393216, 4, 1114190, 393216, 4, 1114191, 393216, 4, 1114192, 393216, 4, 1114193, 393216, 4, 1114194, 393216, 4, 1114195, 393216, 4, 1114196, 393216, 4, 1114197, 393216, 4, 1114198, 393216, 4, 1114199, 393216, 4, 1114200, 393216, 4, 1114201, 393216, 4, 1114202, 393216, 4, 1114203, 393216, 4, 1114204, 393216, 4, 1114205, 393216, 4, 1114206, 393216, 4, 458846, 393216, 4, 524382, 393216, 4, 589918, 393216, 4, 655454, 393216, 4, 720990, 393216, 4, 786526, 393216, 4, 852062, 393216, 4, 917598, 393216, 4, 983134, 393216, 4, 1048670, 393216, 4, 1048621, 327680, 5, 1048622, 327680, 5, 1048623, 327680, 5, 1048624, 327680, 5, 1048625, 327680, 5, 1048626, 327680, 5, 1048627, 327680, 5, 1048628, 327680, 5, 1048629, 327680, 5, 1048630, 327680, 5, 1048631, 327680, 5, 1048632, 327680, 5, 1048633, 327680, 5, 1048634, 327680, 5, 1048635, 327680, 5, 1048636, 327680, 5, 1048637, 327680, 5, 1048638, 327680, 5, 1048639, 327680, 5, 1048640, 327680, 5, 1048641, 327680, 5, 1048642, 327680, 5, 1048643, 327680, 5, 1048644, 327680, 5, 1048645, 327680, 5, 1048646, 327680, 5, 1048647, 327680, 5, 1048648, 327680, 5, 1048649, 327680, 5, 1048650, 327680, 5, 1048651, 327680, 5, 1048663, 327680, 5, 1048664, 327680, 5, 1048665, 327680, 5, 1048666, 327680, 5, 1048667, 327680, 5, 1048668, 327680, 5, 1048669, 327680, 5, 1048652, 327680, 5, 1048653, 327680, 5, 1048654, 327680, 5, 1048655, 327680, 5, 1048656, 327680, 5, 1048657, 327680, 5, 1048658, 327680, 5, 1048659, 327680, 5, 1048660, 327680, 5, 1048661, 327680, 5, 1048662, 327680, 5, 2687021, 393216, 5, 2687022, 393216, 5, 2687023, 393216, 5, 2687024, 393216, 5, 2687025, 393216, 5, 2687026, 393216, 5, 2687027, 393216, 5, 2687028, 393216, 5, 2687029, 393216, 5, 2687030, 393216, 5, 2687031, 393216, 5, 2687032, 393216, 5, 2687036, 393216, 5, 2687037, 393216, 5, 2687038, 393216, 5, 2687039, 393216, 5, 2687040, 393216, 5, 2687041, 393216, 5, 2687042, 393216, 5, 2687043, 393216, 5, 2687044, 393216, 5, 2687045, 393216, 5, 2687046, 393216, 5, 2687047, 393216, 5, 2687048, 393216, 5, 2687049, 393216, 5, 2687050, 393216, 5, 2687051, 393216, 5, 2687052, 393216, 5, 2687053, 393216, 5, 2687054, 393216, 5, 2687055, 393216, 5, 2687056, 393216, 5, 2687057, 393216, 5, 2687058, 393216, 5, 2687059, 393216, 5, 2687064, 393216, 5, 2687065, 393216, 5, 2687066, 393216, 5, 2687067, 393216, 5, 2687068, 393216, 5, 1179742, 393216, 5, 1245278, 393216, 5, 1310814, 393216, 5, 1507422, 393216, 5, 1441886, 393216, 5, 1376350, 393216, 5, 1572958, 393216, 5, 1638494, 393216, 5, 1704030, 393216, 5, 1769566, 393216, 5, 1835102, 393216, 5, 1900638, 393216, 5, 1966174, 393216, 5, 2031710, 393216, 5, 2097246, 393216, 5, 2162782, 393216, 5, 2424926, 393216, 5, 2359390, 393216, 5, 2293854, 393216, 5, 2228318, 393216, 5, 2490462, 393216, 5, 2555998, 393216, 5, 2621534, 393216, 5, 2687070, 393216, 5, 2687069, 393216, 5, 2687061, 393216, 5, 2687062, 393216, 5, 2687063, 393216, 5, 2687060, 393216, 5, 2687033, 393216, 5, 2687034, 393216, 5, 2687035, 393216, 5, 1179693, 196608, 2, 2621485, 196608, 4, 2621533, 327680, 4, 1179741, 327680, 2, 1179694, 262144, 2, 1179695, 262144, 2, 1179696, 262144, 2, 1179697, 262144, 2, 1179698, 262144, 2, 1179699, 262144, 2, 1179700, 262144, 2, 1179701, 262144, 2, 1179702, 262144, 2, 1179703, 262144, 2, 1179704, 262144, 2, 1179705, 262144, 2, 1179706, 262144, 2, 1179707, 262144, 2, 1179708, 262144, 2, 1179709, 262144, 2, 1179710, 262144, 2, 1179711, 262144, 2, 1179712, 262144, 2, 1179713, 262144, 2, 1179714, 262144, 2, 1179715, 262144, 2, 1179716, 262144, 2, 1179717, 262144, 2, 1179718, 262144, 2, 1179719, 262144, 2, 1179720, 262144, 2, 1179721, 262144, 2, 1179722, 262144, 2, 1179723, 262144, 2, 1179724, 262144, 2, 1179725, 262144, 2, 1179726, 262144, 2, 1179727, 262144, 2, 1179728, 262144, 2, 1179729, 262144, 2, 1179730, 262144, 2, 1179731, 262144, 2, 1179732, 262144, 2, 1179733, 262144, 2, 1179734, 262144, 2, 1179735, 262144, 2, 1179736, 262144, 2, 1179737, 262144, 2, 1179738, 262144, 2, 1179739, 262144, 2, 1179740, 262144, 2, 1900616, 262144, 3, 1835080, 262144, 3, 1769544, 262144, 3, 1704008, 262144, 3, 1638472, 262144, 3, 1572936, 262144, 3, 1507400, 262144, 3, 1441864, 262144, 3, 1376328, 262144, 3, 1310792, 262144, 3, 1245256, 262144, 3, 1245255, 262144, 3, 1245254, 262144, 3, 1245253, 262144, 3, 1245252, 262144, 3, 1245251, 262144, 3, 1245250, 262144, 3, 1245249, 262144, 3, 1245248, 262144, 3, 1245247, 262144, 3, 1245246, 262144, 3, 1245245, 262144, 3, 1245244, 262144, 3, 1245243, 262144, 3, 1245242, 262144, 3, 1245241, 262144, 3, 1245240, 262144, 3, 1245239, 262144, 3, 1245238, 262144, 3, 1245237, 262144, 3, 1245236, 262144, 3, 1245235, 262144, 3, 1245234, 262144, 3, 1245233, 262144, 3, 1245232, 262144, 3, 1245231, 262144, 3, 1245230, 262144, 3, 1245229, 262144, 3, 1310765, 262144, 3, 1376301, 262144, 3, 1441837, 262144, 3, 1507373, 262144, 3, 1572909, 262144, 3, 1638445, 262144, 3, 1703981, 262144, 3, 1769517, 262144, 3, 1835053, 262144, 3, 1900589, 262144, 3, 1966125, 262144, 3, 2031661, 262144, 3, 2097197, 262144, 3, 2162733, 262144, 3, 2228269, 262144, 3, 2293805, 262144, 3, 2359341, 262144, 3, 2424877, 262144, 3, 2490413, 262144, 3, 2555949, 262144, 3, 2555950, 262144, 3, 2490414, 262144, 3, 2424878, 262144, 3, 2359342, 262144, 3, 2293806, 262144, 3, 2228270, 262144, 3, 2162734, 262144, 3, 2097198, 262144, 3, 2031662, 262144, 3, 1966126, 262144, 3, 1900590, 262144, 3, 1835054, 262144, 3, 1769518, 262144, 3, 1703982, 262144, 3, 1638446, 262144, 3, 1572910, 262144, 3, 1507374, 262144, 3, 1441838, 262144, 3, 1376302, 262144, 3, 1310766, 262144, 3, 1310767, 262144, 3, 1376303, 262144, 3, 1441839, 262144, 3, 1507375, 262144, 3, 1572911, 262144, 3, 1638447, 262144, 3, 1703983, 262144, 3, 1769519, 262144, 3, 1835055, 262144, 3, 1900591, 262144, 3, 1966127, 262144, 3, 2031663, 262144, 3, 2097199, 262144, 3, 2162735, 262144, 3, 2228271, 262144, 3, 2293807, 262144, 3, 2359343, 262144, 3, 2424879, 262144, 3, 2490415, 262144, 3, 2555951, 262144, 3, 2621487, 262144, 3, 2621486, 262144, 3, 2621488, 262144, 3, 2555952, 262144, 3, 2490416, 262144, 3, 2424880, 262144, 3, 2359344, 262144, 3, 2293808, 262144, 3, 2228272, 262144, 3, 2162736, 262144, 3, 2097200, 262144, 3, 2031664, 262144, 3, 1966128, 262144, 3, 1900592, 262144, 3, 1835056, 262144, 3, 1769520, 262144, 3, 1703984, 262144, 3, 1638448, 262144, 3, 1572912, 262144, 3, 1507376, 262144, 3, 1441840, 262144, 3, 1376304, 262144, 3, 1310768, 262144, 3, 1310769, 262144, 3, 1376305, 262144, 3, 1441841, 262144, 3, 1507377, 262144, 3, 1572913, 262144, 3, 1638449, 262144, 3, 1703985, 262144, 3, 1769521, 262144, 3, 1835057, 262144, 3, 1900593, 262144, 3, 1966129, 262144, 3, 2031665, 262144, 3, 2097201, 262144, 3, 2162737, 262144, 3, 2228273, 262144, 3, 2293809, 262144, 3, 2359345, 262144, 3, 2424881, 262144, 3, 2490417, 262144, 3, 2555953, 262144, 3, 2621489, 262144, 3, 2621490, 262144, 3, 2555954, 262144, 3, 2490418, 262144, 3, 2424882, 262144, 3, 2359346, 262144, 3, 2293810, 262144, 3, 2228274, 262144, 3, 2162738, 262144, 3, 2097202, 262144, 3, 2031666, 262144, 3, 1966130, 262144, 3, 1900594, 262144, 3, 1835058, 262144, 3, 1769522, 262144, 3, 1703986, 262144, 3, 1638450, 262144, 3, 1572914, 262144, 3, 1507378, 262144, 3, 1441842, 262144, 3, 1376306, 262144, 3, 1310770, 262144, 3, 1310771, 262144, 3, 1376307, 262144, 3, 1441843, 262144, 3, 1507379, 262144, 3, 1572915, 262144, 3, 1638451, 262144, 3, 1703987, 262144, 3, 1769523, 262144, 3, 1835059, 262144, 3, 1900595, 262144, 3, 1966131, 262144, 3, 2031667, 262144, 3, 2097203, 262144, 3, 2162739, 262144, 3, 2228275, 262144, 3, 2293811, 262144, 3, 2359347, 262144, 3, 2424883, 262144, 3, 2490419, 262144, 3, 2555955, 262144, 3, 2621491, 262144, 3, 2621492, 262144, 3, 2555956, 262144, 3, 2490420, 262144, 3, 2424884, 262144, 3, 2359348, 262144, 3, 2293812, 262144, 3, 2228276, 262144, 3, 2162740, 262144, 3, 2097204, 262144, 3, 2031668, 262144, 3, 1966132, 262144, 3, 1900596, 262144, 3, 1835060, 262144, 3, 1769524, 262144, 3, 1703988, 262144, 3, 1638452, 262144, 3, 1572916, 262144, 3, 1507380, 262144, 3, 1441844, 262144, 3, 1376308, 262144, 3, 1310772, 262144, 3, 1310773, 262144, 3, 1376309, 262144, 3, 1441845, 262144, 3, 1507381, 262144, 3, 1572917, 262144, 3, 1638453, 262144, 3, 1703989, 262144, 3, 1769525, 262144, 3, 1835061, 262144, 3, 1900597, 262144, 3, 1966133, 262144, 3, 2031669, 262144, 3, 2097205, 262144, 3, 2162741, 262144, 3, 2228277, 262144, 3, 2293813, 262144, 3, 2359349, 262144, 3, 2424885, 262144, 3, 2490421, 262144, 3, 2555957, 262144, 3, 2621493, 262144, 3, 2621494, 262144, 3, 2555958, 262144, 3, 2490422, 262144, 3, 2424886, 262144, 3, 2359350, 262144, 3, 2293814, 262144, 3, 2228278, 262144, 3, 2162742, 262144, 3, 2097206, 262144, 3, 2031670, 262144, 3, 1966134, 262144, 3, 1900598, 262144, 3, 1835062, 262144, 3, 1769526, 262144, 3, 1703990, 262144, 3, 1638454, 262144, 3, 1572918, 262144, 3, 1507382, 262144, 3, 1441846, 262144, 3, 1376310, 262144, 3, 1310774, 262144, 3, 1310775, 262144, 3, 1376311, 262144, 3, 1441847, 262144, 3, 1507383, 262144, 3, 1572919, 262144, 3, 1638455, 262144, 3, 1703991, 262144, 3, 1769527, 262144, 3, 1835063, 262144, 3, 1900599, 262144, 3, 1966135, 262144, 3, 2031671, 262144, 3, 2097207, 262144, 3, 2162743, 262144, 3, 2228279, 262144, 3, 2293815, 262144, 3, 2359351, 262144, 3, 2424887, 262144, 3, 2490423, 262144, 3, 2555959, 262144, 3, 2621495, 262144, 3, 2621496, 262144, 3, 2555960, 262144, 3, 2490424, 262144, 3, 2424888, 262144, 3, 2359352, 262144, 3, 2293816, 262144, 3, 2228280, 262144, 3, 2162744, 262144, 3, 2097208, 262144, 3, 2031672, 262144, 3, 1966136, 262144, 3, 1900600, 262144, 3, 1835064, 262144, 3, 1769528, 262144, 3, 1703992, 262144, 3, 1638456, 262144, 3, 1572920, 262144, 3, 1507384, 262144, 3, 1441848, 262144, 3, 1376312, 262144, 3, 1310776, 262144, 3, 1310777, 262144, 3, 1376313, 262144, 3, 1441849, 262144, 3, 1507385, 262144, 3, 1572921, 262144, 3, 1638457, 262144, 3, 1703993, 262144, 3, 1769529, 262144, 3, 1835065, 262144, 3, 1900601, 262144, 3, 1966137, 262144, 3, 2031673, 262144, 3, 2097209, 262144, 3, 2162745, 262144, 3, 2228281, 262144, 3, 2293817, 262144, 3, 2359353, 262144, 3, 2424889, 262144, 3, 2490425, 262144, 3, 2555961, 262144, 3, 2621497, 262144, 3, 2621498, 262144, 3, 2555962, 262144, 3, 2490426, 262144, 3, 2424890, 262144, 3, 2359354, 262144, 3, 2293818, 262144, 3, 2228282, 262144, 3, 2162746, 262144, 3, 2097210, 262144, 3, 2031674, 262144, 3, 1966138, 262144, 3, 1900602, 262144, 3, 1835066, 262144, 3, 1769530, 262144, 3, 1703994, 262144, 3, 1638458, 262144, 3, 1572922, 262144, 3, 1507386, 262144, 3, 1441850, 262144, 3, 1376314, 262144, 3, 1310778, 262144, 3, 1310779, 262144, 3, 1376315, 262144, 3, 1441851, 262144, 3, 1507387, 262144, 3, 1572923, 262144, 3, 1638459, 262144, 3, 1703995, 262144, 3, 1769531, 262144, 3, 1835067, 262144, 3, 1900603, 262144, 3, 1966139, 262144, 3, 2031675, 262144, 3, 2097211, 262144, 3, 2162747, 262144, 3, 2228283, 262144, 3, 2293819, 262144, 3, 2359355, 262144, 3, 2424891, 262144, 3, 2490427, 262144, 3, 2555963, 262144, 3, 2621499, 262144, 3, 2621500, 262144, 3, 2555964, 262144, 3, 2490428, 262144, 3, 2424892, 262144, 3, 2359356, 262144, 3, 2293820, 262144, 3, 2228284, 262144, 3, 2162748, 262144, 3, 2097212, 262144, 3, 2031676, 262144, 3, 1966140, 262144, 3, 1900604, 262144, 3, 1835068, 262144, 3, 1769532, 262144, 3, 1703996, 262144, 3, 1638460, 262144, 3, 1572924, 262144, 3, 1507388, 262144, 3, 1441852, 262144, 3, 1376316, 262144, 3, 1310780, 262144, 3, 1310781, 262144, 3, 1376317, 262144, 3, 1441853, 262144, 3, 1507389, 262144, 3, 1572925, 262144, 3, 1638461, 262144, 3, 1703997, 262144, 3, 1769533, 262144, 3, 1835069, 262144, 3, 1900605, 262144, 3, 1966141, 262144, 3, 2031677, 262144, 3, 2097213, 262144, 3, 2162749, 262144, 3, 2228285, 262144, 3, 2293821, 262144, 3, 2359357, 262144, 3, 2424893, 262144, 3, 2490429, 262144, 3, 2555965, 262144, 3, 2621501, 262144, 3, 2621502, 262144, 3, 2555966, 262144, 3, 2490430, 262144, 3, 2424894, 262144, 3, 2359358, 262144, 3, 2293822, 262144, 3, 2228286, 262144, 3, 2162750, 262144, 3, 2097214, 262144, 3, 2031678, 262144, 3, 1966142, 262144, 3, 1900606, 262144, 3, 1835070, 262144, 3, 1769534, 262144, 3, 1703998, 262144, 3, 1638462, 262144, 3, 1572926, 262144, 3, 1507390, 262144, 3, 1441854, 262144, 3, 1376318, 262144, 3, 1310782, 262144, 3, 1310783, 262144, 3, 1376319, 262144, 3, 1441855, 262144, 3, 1507391, 262144, 3, 1572927, 262144, 3, 1638463, 262144, 3, 1703999, 262144, 3, 1769535, 262144, 3, 1835071, 262144, 3, 1900607, 262144, 3, 1966143, 262144, 3, 2031679, 262144, 3, 2097215, 262144, 3, 2162751, 262144, 3, 2228287, 262144, 3, 2293823, 262144, 3, 2359359, 262144, 3, 2424895, 262144, 3, 2490431, 262144, 3, 2555967, 262144, 3, 2621503, 262144, 3, 2621504, 262144, 3, 2555968, 262144, 3, 2490432, 262144, 3, 2424896, 262144, 3, 2359360, 262144, 3, 2293824, 262144, 3, 2228288, 262144, 3, 2162752, 262144, 3, 2097216, 262144, 3, 2031680, 262144, 3, 1966144, 262144, 3, 1900608, 262144, 3, 1835072, 262144, 3, 1769536, 262144, 3, 1704000, 262144, 3, 1638464, 262144, 3, 1572928, 262144, 3, 1507392, 262144, 3, 1441856, 262144, 3, 1376320, 262144, 3, 1310784, 262144, 3, 1310785, 262144, 3, 1376321, 262144, 3, 1441857, 262144, 3, 1507393, 262144, 3, 1572929, 262144, 3, 1638465, 262144, 3, 1704001, 262144, 3, 1769537, 262144, 3, 1835073, 262144, 3, 1900609, 262144, 3, 1966145, 262144, 3, 2031681, 262144, 3, 2097217, 262144, 3, 2162753, 262144, 3, 2228289, 262144, 3, 2293825, 262144, 3, 2359361, 262144, 3, 2424897, 262144, 3, 2490433, 262144, 3, 2555969, 262144, 3, 2621505, 262144, 3, 2621506, 262144, 3, 2555970, 262144, 3, 2490434, 262144, 3, 2424898, 262144, 3, 2359362, 262144, 3, 2293826, 262144, 3, 2228290, 262144, 3, 2162754, 262144, 3, 2097218, 262144, 3, 2031682, 262144, 3, 1966146, 262144, 3, 1900610, 262144, 3, 1835074, 262144, 3, 1769538, 262144, 3, 1704002, 262144, 3, 1638466, 262144, 3, 1572930, 262144, 3, 1507394, 262144, 3, 1441858, 262144, 3, 1376322, 262144, 3, 1310786, 262144, 3, 1310787, 262144, 3, 1376323, 262144, 3, 1441859, 262144, 3, 1507395, 262144, 3, 1572931, 262144, 3, 1638467, 262144, 3, 1704003, 262144, 3, 1769539, 262144, 3, 1835075, 262144, 3, 1900611, 262144, 3, 1966147, 262144, 3, 2031683, 262144, 3, 2097219, 262144, 3, 2162755, 262144, 3, 2228291, 262144, 3, 2293827, 262144, 3, 2359363, 262144, 3, 2424899, 262144, 3, 2490435, 262144, 3, 2555971, 262144, 3, 2621507, 262144, 3, 2621508, 262144, 3, 2555972, 262144, 3, 2490436, 262144, 3, 2424900, 262144, 3, 2359364, 262144, 3, 2293828, 262144, 3, 2228292, 262144, 3, 2162756, 262144, 3, 2097220, 262144, 3, 2031684, 262144, 3, 1966148, 262144, 3, 1900612, 262144, 3, 1835076, 262144, 3, 1769540, 262144, 3, 1704004, 262144, 3, 1638468, 262144, 3, 1572932, 262144, 3, 1507396, 262144, 3, 1441860, 262144, 3, 1376324, 262144, 3, 1310788, 262144, 3, 1310789, 262144, 3, 1376325, 262144, 3, 1441861, 262144, 3, 1507397, 262144, 3, 1572933, 262144, 3, 1638469, 262144, 3, 1704005, 262144, 3, 1769541, 262144, 3, 1835077, 262144, 3, 1900613, 262144, 3, 1966149, 262144, 3, 2031685, 262144, 3, 2097221, 262144, 3, 2162757, 262144, 3, 2228293, 262144, 3, 2293829, 262144, 3, 2359365, 262144, 3, 2424901, 262144, 3, 2490437, 262144, 3, 2555973, 262144, 3, 2621509, 262144, 3, 2621510, 262144, 3, 2555974, 262144, 3, 2490438, 262144, 3, 2424902, 262144, 3, 2359366, 262144, 3, 2293830, 262144, 3, 2228294, 262144, 3, 2162758, 262144, 3, 2097222, 262144, 3, 2031686, 262144, 3, 1966150, 262144, 3, 1900614, 262144, 3, 1835078, 262144, 3, 1769542, 262144, 3, 1704006, 262144, 3, 1638470, 262144, 3, 1572934, 262144, 3, 1507398, 262144, 3, 1441862, 262144, 3, 1376326, 262144, 3, 1310790, 262144, 3, 1310791, 262144, 3, 1376327, 262144, 3, 1441863, 262144, 3, 1507399, 262144, 3, 1572935, 262144, 3, 1638471, 262144, 3, 1704007, 262144, 3, 1769543, 262144, 3, 1835079, 262144, 3, 1900615, 262144, 3, 1966151, 262144, 3, 2031687, 262144, 3, 2097223, 262144, 3, 2162759, 262144, 3, 2228295, 262144, 3, 2293831, 262144, 3, 2359367, 262144, 3, 2424903, 262144, 3, 2490439, 262144, 3, 2555975, 262144, 3, 2621511, 262144, 3, 2621512, 262144, 3, 2555976, 262144, 3, 2490440, 262144, 3, 2424904, 262144, 3, 2359368, 262144, 3, 2293832, 262144, 3, 2228296, 262144, 3, 2162760, 262144, 3, 2097224, 262144, 3, 2031688, 262144, 3, 1966152, 262144, 3, 1966153, 262144, 3, 1900617, 262144, 3, 1835081, 262144, 3, 1769545, 262144, 3, 1704009, 262144, 3, 1638473, 262144, 3, 1572937, 262144, 3, 1507401, 262144, 3, 1441865, 262144, 3, 1376329, 262144, 3, 1310793, 262144, 3, 1245257, 262144, 3, 1245258, 262144, 3, 1310794, 262144, 3, 1376330, 262144, 3, 1441866, 262144, 3, 1507402, 262144, 3, 1572938, 262144, 3, 1638474, 262144, 3, 1704010, 262144, 3, 1769546, 262144, 3, 1835082, 262144, 3, 1900618, 262144, 3, 1966154, 262144, 3, 2031690, 262144, 3, 2031689, 262144, 3, 2097225, 262144, 3, 2162761, 262144, 3, 2228297, 262144, 3, 2293833, 262144, 3, 2359369, 262144, 3, 2424905, 262144, 3, 2490441, 262144, 3, 2555977, 262144, 3, 2621513, 262144, 3, 2621514, 262144, 3, 2555978, 262144, 3, 2490442, 262144, 3, 2424906, 262144, 3, 2359370, 262144, 3, 2293834, 262144, 3, 2228298, 262144, 3, 2162762, 262144, 3, 2097226, 262144, 3, 2097227, 262144, 3, 2031691, 262144, 3, 1966155, 262144, 3, 1900619, 262144, 3, 1835083, 262144, 3, 1769547, 262144, 3, 1704011, 262144, 3, 1638475, 262144, 3, 1572939, 262144, 3, 1507403, 262144, 3, 1441867, 262144, 3, 1376331, 262144, 3, 1310795, 262144, 3, 1245259, 262144, 3, 1245260, 262144, 3, 1310796, 262144, 3, 1376332, 262144, 3, 1441868, 262144, 3, 1507404, 262144, 3, 1572940, 262144, 3, 1638476, 262144, 3, 1704012, 262144, 3, 1769548, 262144, 3, 1835084, 262144, 3, 1900620, 262144, 3, 1966156, 262144, 3, 2031692, 262144, 3, 2097228, 262144, 3, 2162764, 262144, 3, 2162763, 262144, 3, 2228299, 262144, 3, 2293835, 262144, 3, 2359371, 262144, 3, 2424907, 262144, 3, 2490443, 262144, 3, 2555979, 262144, 3, 2621515, 262144, 3, 2621516, 262144, 3, 2555980, 262144, 3, 2490444, 262144, 3, 2424908, 262144, 3, 2359372, 262144, 3, 2293836, 262144, 3, 2228300, 262144, 3, 2228301, 262144, 3, 2162765, 262144, 3, 2097229, 262144, 3, 2031693, 262144, 3, 1966157, 262144, 3, 1900621, 262144, 3, 1835085, 262144, 3, 1769549, 262144, 3, 1704013, 262144, 3, 1638477, 262144, 3, 1572941, 262144, 3, 1507405, 262144, 3, 1441869, 262144, 3, 1376333, 262144, 3, 1310797, 262144, 3, 1245261, 262144, 3, 1245262, 262144, 3, 1310798, 262144, 3, 1376334, 262144, 3, 1441870, 262144, 3, 1507406, 262144, 3, 1572942, 262144, 3, 1638478, 262144, 3, 1704014, 262144, 3, 1769550, 262144, 3, 1835086, 262144, 3, 1900622, 262144, 3, 1966158, 262144, 3, 2031694, 262144, 3, 2097230, 262144, 3, 2162766, 262144, 3, 2228302, 262144, 3, 2293838, 262144, 3, 2293837, 262144, 3, 2359373, 262144, 3, 2424909, 262144, 3, 2490445, 262144, 3, 2555981, 262144, 3, 2621517, 262144, 3, 2621518, 262144, 3, 2555982, 262144, 3, 2490446, 262144, 3, 2424910, 262144, 3, 2359374, 262144, 3, 2359375, 262144, 3, 2293839, 262144, 3, 2228303, 262144, 3, 2162767, 262144, 3, 2097231, 262144, 3, 2031695, 262144, 3, 1966159, 262144, 3, 1900623, 262144, 3, 1835087, 262144, 3, 1769551, 262144, 3, 1704015, 262144, 3, 1638479, 262144, 3, 1572943, 262144, 3, 1507407, 262144, 3, 1441871, 262144, 3, 1376335, 262144, 3, 1310799, 262144, 3, 1245263, 262144, 3, 1245264, 262144, 3, 1310800, 262144, 3, 1376336, 262144, 3, 1441872, 262144, 3, 1507408, 262144, 3, 1572944, 262144, 3, 1638480, 262144, 3, 1704016, 262144, 3, 1769552, 262144, 3, 1835088, 262144, 3, 1900624, 262144, 3, 1966160, 262144, 3, 2031696, 262144, 3, 2097232, 262144, 3, 2162768, 262144, 3, 2228304, 262144, 3, 2293840, 262144, 3, 2359376, 262144, 3, 2424912, 262144, 3, 2424911, 262144, 3, 2490447, 262144, 3, 2555983, 262144, 3, 2621519, 262144, 3, 2621520, 262144, 3, 2555984, 262144, 3, 2490448, 262144, 3, 2490449, 262144, 3, 2424913, 262144, 3, 2359377, 262144, 3, 2293841, 262144, 3, 2228305, 262144, 3, 2162769, 262144, 3, 2097233, 262144, 3, 2031697, 262144, 3, 1966161, 262144, 3, 1900625, 262144, 3, 1835089, 262144, 3, 1769553, 262144, 3, 1704017, 262144, 3, 1638481, 262144, 3, 1572945, 262144, 3, 1507409, 262144, 3, 1441873, 262144, 3, 1376337, 262144, 3, 1310801, 262144, 3, 1245265, 262144, 3, 1245266, 262144, 3, 1310802, 262144, 3, 1376338, 262144, 3, 1441874, 262144, 3, 1507410, 262144, 3, 1572946, 262144, 3, 1638482, 262144, 3, 1704018, 262144, 3, 1769554, 262144, 3, 1835090, 262144, 3, 1900626, 262144, 3, 1966162, 262144, 3, 2031698, 262144, 3, 2097234, 262144, 3, 2162770, 262144, 3, 2228306, 262144, 3, 2293842, 262144, 3, 2359378, 262144, 3, 2424914, 262144, 3, 2490450, 262144, 3, 2555986, 262144, 3, 2555985, 262144, 3, 2621521, 262144, 3, 2621522, 262144, 3, 2621523, 262144, 3, 2555987, 262144, 3, 2490451, 262144, 3, 2424915, 262144, 3, 2359379, 262144, 3, 2293843, 262144, 3, 2228307, 262144, 3, 2162771, 262144, 3, 2097235, 262144, 3, 2031699, 262144, 3, 1966163, 262144, 3, 1900627, 262144, 3, 1835091, 262144, 3, 1769555, 262144, 3, 1704019, 262144, 3, 1638483, 262144, 3, 1572947, 262144, 3, 1507411, 262144, 3, 1441875, 262144, 3, 1376339, 262144, 3, 1310803, 262144, 3, 1245267, 262144, 3, 1245268, 262144, 3, 1310804, 262144, 3, 1376340, 262144, 3, 1441876, 262144, 3, 1507412, 262144, 3, 1572948, 262144, 3, 1638484, 262144, 3, 1704020, 262144, 3, 1769556, 262144, 3, 1835092, 262144, 3, 1900628, 262144, 3, 1966164, 262144, 3, 2031700, 262144, 3, 2097236, 262144, 3, 2162772, 262144, 3, 2228308, 262144, 3, 2293844, 262144, 3, 2359380, 262144, 3, 2424916, 262144, 3, 2490452, 262144, 3, 2555988, 262144, 3, 2621524, 262144, 3, 2621525, 262144, 3, 2555989, 262144, 3, 2490453, 262144, 3, 2424917, 262144, 3, 2359381, 262144, 3, 2293845, 262144, 3, 2228309, 262144, 3, 2162773, 262144, 3, 2097237, 262144, 3, 2031701, 262144, 3, 1966165, 262144, 3, 1900629, 262144, 3, 1835093, 262144, 3, 1769557, 262144, 3, 1704021, 262144, 3, 1638485, 262144, 3, 1572949, 262144, 3, 1507413, 262144, 3, 1441877, 262144, 3, 1376341, 262144, 3, 1310805, 262144, 3, 1245269, 262144, 3, 1245270, 262144, 3, 1310806, 262144, 3, 1376342, 262144, 3, 1441878, 262144, 3, 1507414, 262144, 3, 1572950, 262144, 3, 1638486, 262144, 3, 1704022, 262144, 3, 1769558, 262144, 3, 1835094, 262144, 3, 1900630, 262144, 3, 1966166, 262144, 3, 2031702, 262144, 3, 2097238, 262144, 3, 2162774, 262144, 3, 2228310, 262144, 3, 2293846, 262144, 3, 2359382, 262144, 3, 2424918, 262144, 3, 2490454, 262144, 3, 2555990, 262144, 3, 2621526, 262144, 3, 2621527, 262144, 3, 2555991, 262144, 3, 2490455, 262144, 3, 2424919, 262144, 3, 2359383, 262144, 3, 2293847, 262144, 3, 2228311, 262144, 3, 2162775, 262144, 3, 2097239, 262144, 3, 2031703, 262144, 3, 1966167, 262144, 3, 1900631, 262144, 3, 1835095, 262144, 3, 1769559, 262144, 3, 1704023, 262144, 3, 1638487, 262144, 3, 1572951, 262144, 3, 1507415, 262144, 3, 1441879, 262144, 3, 1376343, 262144, 3, 1310807, 262144, 3, 1245271, 262144, 3, 1245272, 262144, 3, 1310808, 262144, 3, 1376344, 262144, 3, 1441880, 262144, 3, 1507416, 262144, 3, 1572952, 262144, 3, 1638488, 262144, 3, 1704024, 262144, 3, 1769560, 262144, 3, 1835096, 262144, 3, 1900632, 262144, 3, 1966168, 262144, 3, 2031704, 262144, 3, 2097240, 262144, 3, 2162776, 262144, 3, 2228312, 262144, 3, 2293848, 262144, 3, 2359384, 262144, 3, 2424920, 262144, 3, 2490456, 262144, 3, 2555992, 262144, 3, 2621528, 262144, 3, 2621529, 262144, 3, 2555993, 262144, 3, 2490457, 262144, 3, 2424921, 262144, 3, 2359385, 262144, 3, 2293849, 262144, 3, 2228313, 262144, 3, 2162777, 262144, 3, 2097241, 262144, 3, 2031705, 262144, 3, 1966169, 262144, 3, 1900633, 262144, 3, 1835097, 262144, 3, 1769561, 262144, 3, 1704025, 262144, 3, 1638489, 262144, 3, 1572953, 262144, 3, 1507417, 262144, 3, 1441881, 262144, 3, 1376345, 262144, 3, 1310809, 262144, 3, 1245273, 262144, 3, 1245274, 262144, 3, 1310810, 262144, 3, 1376346, 262144, 3, 1441882, 262144, 3, 1507418, 262144, 3, 1572954, 262144, 3, 1638490, 262144, 3, 1704026, 262144, 3, 1769562, 262144, 3, 1835098, 262144, 3, 1900634, 262144, 3, 1966170, 262144, 3, 2031706, 262144, 3, 2097242, 262144, 3, 2162778, 262144, 3, 2228314, 262144, 3, 2293850, 262144, 3, 2359386, 262144, 3, 2424922, 262144, 3, 2490458, 262144, 3, 2555994, 262144, 3, 2621530, 262144, 3, 2621531, 262144, 3, 2555995, 262144, 3, 2490459, 262144, 3, 2424923, 262144, 3, 2359387, 262144, 3, 2293851, 262144, 3, 2228315, 262144, 3, 2162779, 262144, 3, 2097243, 262144, 3, 2031707, 262144, 3, 1966171, 262144, 3, 1900635, 262144, 3, 1835099, 262144, 3, 1769563, 262144, 3, 1704027, 262144, 3, 1638491, 262144, 3, 1572955, 262144, 3, 1507419, 262144, 3, 1441883, 262144, 3, 1376347, 262144, 3, 1310811, 262144, 3, 1245275, 262144, 3, 1245276, 262144, 3, 1310812, 262144, 3, 1376348, 262144, 3, 1441884, 262144, 3, 1507420, 262144, 3, 1572956, 262144, 3, 1638492, 262144, 3, 1704028, 262144, 3, 1769564, 262144, 3, 1835100, 262144, 3, 1900636, 262144, 3, 1966172, 262144, 3, 2031708, 262144, 3, 2097244, 262144, 3, 2162780, 262144, 3, 2228316, 262144, 3, 2293852, 262144, 3, 2359388, 262144, 3, 2424924, 262144, 3, 2490460, 262144, 3, 2555996, 262144, 3, 2621532, 262144, 3, 2555997, 262144, 3, 2490461, 262144, 3, 2424925, 262144, 3, 2359389, 262144, 3, 2293853, 262144, 3, 2228317, 262144, 3, 2162781, 262144, 3, 2097245, 262144, 3, 2031709, 262144, 3, 1966173, 262144, 3, 1900637, 262144, 3, 1835101, 262144, 3, 1769565, 262144, 3, 1704029, 262144, 3, 1638493, 262144, 3, 1572957, 262144, 3, 1507421, 262144, 3, 1441885, 262144, 3, 1376349, 262144, 3, 1310813, 262144, 3, 1245277, 262144, 3, -720799, 196608, 6, -720797, 131072, 5, -786333, 131072, 4, -851869, 131072, 4, -917405, 131072, 4, -982941, 131072, 3), "Water", PackedInt32Array(), ExtResource("3_weivw"), Vector2(513, 966), Vector2(0.216449, 1.5428), SubResource("Curve2D_pwusb"), ExtResource("4_hbxl0"), false, 2.0, 0.5, Vector2(39, 615), ExtResource("5_raef3"), Vector2(152, 583), 16, ExtResource("6_umv43"), PackedVector2Array(27, 617, 132, 617, 205, 616, 237, 603, 212, 571, 133, 567, 82, 578, 33, 603, 26, 613, 15, 614, 37, 579, 116, 558, 166, 563, 225, 568, 248, 599, 220, 619, 128, 627, 80, 629, 46, 624, 19, 622), Vector2(356, -42), PackedVector2Array(83, 618, 132, 617, 148, 610, 151, 605, 156, 591, 133, 567, 83, 572, 59, 596, 83, 613, 81, 614, 48, 595, 78, 568, 119, 567, 166, 563, 165, 584, 178, 602, 157, 619, 128, 627, 84, 629, 80, 627, 82, 623), Vector2(476, 549), Vector2(305, -222), PackedVector2Array(92, 607, 131, 611, 191, 603, 209, 607, 194, 588, 133, 567, 83, 572, 81, 604, 83, 613, 81, 614, 74, 594, 78, 568, 119, 567, 166, 563, 216, 592, 213, 602, 206, 610, 126, 621, 90, 618, 86, 618, 88, 613), Vector2(463, 366), Vector2(0, -475), PackedVector2Array(68, 619, 132, 617, 194, 615, 209, 607, 194, 588, 133, 567, 83, 572, 81, 604, 68, 614, 55, 606, 50, 590, 78, 568, 119, 567, 166, 563, 216, 592, 234, 616, 215, 622, 128, 627, 84, 629, 67, 623, 67, 621), Vector2(129, 101), ExtResource("7_ma6fy"), Vector2(595, 296), SubResource("Curve2D_8d3c4"), ExtResource("8_6urmu"), Vector2(531, 63), SubResource("Curve2D_nyrge"), Vector2(640, 76), SubResource("Curve2D_q4of6"), ExtResource("9_r262g"), Vector2(125, 617), ExtResource("10_q81jo"), Vector2(899, -215), Vector2(1138, -212), Vector2(823, -802), Vector2(1.76744, 1), PackedVector2Array(27, 617, 103, 612, 132, 617, 205, 616, 237, 603, 212, 571, 136.281, 529, 23.1974, 562, 33, 603, 26, 613, 15, 614, 10.75, 558, 92.7898, 525, 156.158, 520, 208.211, 555, 248, 599, 222, 616, 128, 627, 80, 629, 46, 624, 19, 622), 1448.0, -180.0, 1516.0, -157.0, "Button A", 1375.0, 202.0, 1443.0, 225.0, "Button B", 1264.0, 91.0, 1374.0, 114.0, "Boss Room", Vector2(1153, 174), Vector2(1018, -408), ExtResource("11_cdf0f"), Vector2(98, 891.5), Vector2(0, 718.667), SubResource("GDScript_cplqo"), Vector2(2, 2), ExtResource("12_moab4"), 3, 0, 506.873, 496.703, 546.873, 536.703, ExtResource("13_uf58x")],
"version": 3
}

[resource]
script = ExtResource("14_0f77j")
SaveScene = SubResource("PackedScene_1cfyf")
SavePlayer = SubResource("PackedScene_ok6rq")
PlayerPosition = Vector2(0, 0)
